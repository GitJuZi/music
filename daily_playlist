/**
 * 网易云音乐 日榜播放脚本（Loon 版）
 * Cookie 键名：Netease_Musician_Cookie
 * UserAgent 键名：Netease_Musician_UserAgent
 * by @GitJuZi
 */

const cookie = $persistentStore.read("Netease_Musician_Cookie");
const userAgent = $persistentStore.read("Netease_Musician_UserAgent");

console.log("🎵 [播放脚本启动]");
console.log("读取到的 Cookie:", cookie ? "✅ 有" : "❌ 无");
console.log("读取到的 UA:", userAgent ? "✅ 有" : "❌ 无");

if (!cookie || !userAgent) {
  $notification.post("网易云播放脚本", "⚠️ 缺少 Cookie 或 UA", "请先抓取后再运行");
  $done();
}

const headers = {
  "Cookie": cookie,
  "User-Agent": userAgent,
  "Content-Type": "application/x-www-form-urlencoded",
};

// 获取热歌榜播放列表
const playlistId = 3778678; // 热歌日榜 ID
const request = {
  url: `https://music.163.com/weapi/v3/playlist/detail`,
  method: "POST",
  headers: headers,
  body: `params=${encodeURIComponent(getParams(playlistId))}&encSecKey=${getEncSecKey()}`
};

$httpClient.post(request, function (error, response, data) {
  if (error) {
    console.log("❌ 请求播放列表失败：" + error);
    $done();
    return;
  }

  try {
    const res = JSON.parse(data);
    const trackIds = res.playlist.trackIds.slice(0, 30);

    console.log(`📀 共获取到 ${trackIds.length} 首歌，将模拟播放...`);
    playTracks(trackIds, 0);
  } catch (e) {
    console.log("❌ 播放列表解析失败：" + e);
    $done();
  }
});

// 模拟播放
function playTracks(trackIds, index) {
  if (index >= trackIds.length) {
    console.log("✅ 所有歌曲播放完毕");
    $notification.post("网易云播放脚本", "✅ 已模拟播放完成", `共 ${trackIds.length} 首`);
    $done();
    return;
  }

  const id = trackIds[index].id;
  const playReq = {
    url: `https://music.163.com/weapi/song/enhance/player/url/v1?csrf_token=`,
    method: "POST",
    headers: headers,
    body: `params=${encodeURIComponent(getSongParams(id))}&encSecKey=${getEncSecKey()}`
  };

  $httpClient.post(playReq, function (err, resp, data) {
    console.log(`▶️ 播放第 ${index + 1} 首，歌曲 ID: ${id}`);
    setTimeout(() => {
      playTracks(trackIds, index + 1);
    }, 3000); // 播放间隔可调（默认每首 3 秒）
  });
}

// 加密参数（模拟结构）
function getParams(id) {
  return JSON.stringify({
    id: id,
    n: 1000,
    csrf_token: ""
  });
}

function getSongParams(id) {
  return JSON.stringify({
    ids: [id],
    level: "standard",
    encodeType: "aac",
    csrf_token: ""
  });
}

function getEncSecKey() {
  return "fake_encSecKey";
}
