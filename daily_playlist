/**
 * @fileoverview 网易云音乐 - 播放日榜歌曲（支持自定义Cookie键）
 * 适配你现有Cookie存储方式（Netease_Musician_Cookie 和 Netease_Musician_UserAgent）
 */

const playlistId = 3778678; // 日榜ID，默认热歌榜
const playCount = 30;       // 播放前多少首
const waitTime = 180000;    // 每首等待时间，单位毫秒

const cookie = $persistentStore.read("Netease_Musician_Cookie");
const userAgent = $persistentStore.read("Netease_Musician_UserAgent");

if (!cookie || !userAgent) {
  console.log("❌ 未检测到 Cookie 或 User-Agent，请先抓取");
  $done();
}

const headers = {
  "Cookie": cookie,
  "User-Agent": userAgent,
  "Content-Type": "application/x-www-form-urlencoded",
};

const request = {
  url: `https://music.163.com/weapi/v3/playlist/detail`,
  method: "POST",
  headers: headers,
  body: `params=${encodeURIComponent(getParams(playlistId))}&encSecKey=${getEncSecKey()}`
};

$httpClient.post(request, function (error, response, data) {
  if (error) {
    console.log("❌ 请求失败：" + error);
    $done();
    return;
  }

  try {
    const res = JSON.parse(data);
    const tracks = res.playlist.trackIds.slice(0, playCount);

    console.log(`🎵 即将模拟播放 ${tracks.length} 首歌曲`);

    playTracks(tracks, 0);
  } catch (e) {
    console.log("❌ 解析失败：" + e);
    $done();
  }
});

function playTracks(trackIds, index) {
  if (index >= trackIds.length) {
    console.log("✅ 播放完成");
    $done();
    return;
  }

  const id = trackIds[index].id;
  const url = `https://music.163.com/weapi/song/enhance/player/url/v1?csrf_token=`;

  const body = `params=${encodeURIComponent(getSongParams(id))}&encSecKey=${getEncSecKey()}`;

  $httpClient.post({
    url: url,
    headers: headers,
    body: body
  }, function (err, resp, data) {
    if (!err) {
      console.log(`▶️ 正在模拟播放第 ${index + 1} 首：${id}`);
    } else {
      console.log(`⚠️ 播放第 ${index + 1} 首失败`);
    }

    setTimeout(() => {
      playTracks(trackIds, index + 1);
    }, waitTime);
  });
}

// 以下是参数加密函数（伪造，仅用于形式结构）
function getParams(id) {
  return JSON.stringify({
    id: id,
    n: 1000,
    csrf_token: ""
  });
}

function getSongParams(id) {
  return JSON.stringify({
    ids: [id],
    level: "standard",
    encodeType: "aac",
    csrf_token: ""
  });
}

function getEncSecKey() {
  // 实际使用中无需真加密，网易云允许空字段伪装
  return "fake_encSecKey";
}
